{"version":3,"sources":["components/SearchBar.jsx","components/Nav.jsx","components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBar","onSearch","useState","city","setCity","onSubmit","e","preventDefault","type","placeholder","value","onChange","target","Nav","className","Card","min","max","name","img","onClose","id","onClick","src","width","height","alt","Cards","cities","console","log","map","c","App","setCities","ciudad","fetch","then","r","json","recurso","undefined","main","Math","round","temp_min","temp_max","weather","icon","wind","speed","temp","clouds","all","latitud","coord","lat","longitud","lon","oldCities","alert","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b39b69c6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function SearchBar({onSearch}) {\n  \n  const [city, setCity] = useState(\"\");\n  return (\n    <form onSubmit={(e) => {\n      e.preventDefault();\n      onSearch(city);\n    }}>\n      <input\n        type=\"text\"\n        placeholder=\"Ciudad...\"\n        value={city}\n        onChange={e => setCity(e.target.value)}\n      />\n      <input type=\"submit\" value=\"Agregar\" />\n    </form>\n  );\n}\n","import React from 'react';\nimport SearchBar from './SearchBar.jsx';\nimport './Nav.css';\n\nfunction Nav({onSearch}) {\n  \n  return (\n    <nav className='navbar'>\n      <SearchBar onSearch={onSearch}/>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from 'react';\nimport './Card.css';\n\nexport default function Card ({min, max, name, img, onClose, id}) {\n    return (\n      <div className=\"card\">\n        <div id=\"closeIcon\" className=\"row\">\n            <button onClick={onClose} className=\"btn-close\">X</button>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name}</h5>\n          <div className=\"row\">\n            <div className=\"card-items-internos\">\n              <p>Min</p>\n              <p>{min}°</p>\n            </div>\n            <div className=\"card-items-internos\">\n              <p>Max</p>\n              <p>{max}°</p>\n            </div>\n            <div className=\"card-items-internos\">\n              <img className=\"iconoClima\" src={\"http://openweathermap.org/img/wn/\"+img+\"@2x.png\"} width=\"80\" height=\"80\" alt=\"\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n};\n","import React from 'react';\nimport './Cards.css';\n\nimport Card from './Card.jsx';\n\nexport default function Cards({cities, onClose}) {\n  console.log('onClose',onClose)\n  if(cities){\n    return (\n      <div className='cards'>\n        {cities.map(c => <Card\n            max={c.max}\n            min={c.min}\n            name={c.name}\n            img={c.img}\n            onClose={() => onClose(c.id)}\n            id={c.id}\n          /> )}\n      </div>\n    );\n  } else {\n    return(\n      <div>Sin ciudades</div>\n    )\n  }\n}\n","import './App.css';\nimport Nav from './components/Nav';\nimport Cards from './components/Cards';\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n  function onSearch(ciudad){\n    const apiKey = '5b709346262108a1389e88c72facf8e6';\n    //http://api.openweathermap.org/data/2.5/weather?q=cuy&units=metric&appid=5b709346262108a1389e88c72facf8e6\n    console.log('ciudad',ciudad)\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&units=metric&appid=${apiKey}`)\n    .then(r=>r.json())\n      .then((recurso) => {\n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon\n          }\n          setCities(oldCities=>[...oldCities, ciudad]);\n        }else{alert(ciudad + \" no se encuentra\")}\n      })\n  }\n  return (\n    <div className=\"App\">\n      <h1>App del Clima</h1>\n      <p>Escriba alguna ciudad en el buscador para conocer la temperatura.</p>\n      <Nav onSearch={onSearch}/>\n      <Cards cities={cities} onClose={onClose}/>\n    </div>\n  );\n  function onClose(id){\n    setCities(oldCities=>oldCities.filter(c=> c.id !== id));\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}